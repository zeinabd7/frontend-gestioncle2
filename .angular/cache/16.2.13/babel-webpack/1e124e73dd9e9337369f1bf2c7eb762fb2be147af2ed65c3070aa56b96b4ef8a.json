{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/zeina/frontend-gestioncle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Lot } from '../lot';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nlet LotEditComponent = class LotEditComponent {\n  constructor(route, router, lotService, immeubleService, coproprio) {\n    this.route = route;\n    this.router = router;\n    this.lotService = lotService;\n    this.immeubleService = immeubleService;\n    this.coproprio = coproprio;\n    this.feedback = {};\n    this.immeubles = [];\n    this.coproprietaires = [];\n  }\n  ngOnInit() {\n    this.route.params.pipe(map(p => p['id']), switchMap(id => {\n      if (id === 'new') {\n        return of(new Lot());\n      }\n      return this.lotService.findById(id);\n    })).subscribe({\n      next: lot => {\n        this.lot = lot;\n        this.feedback = {};\n      },\n      error: err => {\n        this.feedback = {\n          type: 'warning',\n          message: 'Error loading'\n        };\n      }\n    });\n  }\n  save() {\n    var _this = this;\n    this.lotService.save(this.lot).subscribe({\n      next: lot => {\n        this.lot = lot;\n        this.feedback = {\n          type: 'success',\n          message: 'Save was successful!'\n        };\n        setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n          yield _this.router.navigate(['/lots']);\n        }), 1000);\n      },\n      error: err => {\n        this.feedback = {\n          type: 'warning',\n          message: 'Error saving'\n        };\n      }\n    });\n  }\n  cancel() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.router.navigate(['/lots']);\n    })();\n  }\n};\nLotEditComponent = __decorate([Component({\n  selector: 'app-lot-edit',\n  templateUrl: './lot-edit.component.html'\n})], LotEditComponent);\nexport { LotEditComponent };","map":{"version":3,"names":["Component","Lot","map","switchMap","of","LotEditComponent","constructor","route","router","lotService","immeubleService","coproprio","feedback","immeubles","coproprietaires","ngOnInit","params","pipe","p","id","findById","subscribe","next","lot","error","err","type","message","save","_this","setTimeout","_asyncToGenerator","navigate","cancel","_this2","__decorate","selector","templateUrl"],"sources":["C:\\Users\\zeina\\frontend-gestioncle\\src\\app\\lot\\lot-edit\\lot-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LotService } from '../lot.service';\nimport { Lot } from '../lot';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { ImmeubleService } from 'src/app/immeuble/immeuble.service';\nimport { CoproprietaireService } from 'src/app/coproprietaire/coproprietaire.service';\n\n@Component({\n  selector: 'app-lot-edit',\n  templateUrl: './lot-edit.component.html'\n})\nexport class LotEditComponent implements OnInit {\n\n  id!: string;\n  lot!: Lot;\n  feedback: any = {};\n  immeubles: any = [];\n  coproprietaires: any = [];\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private lotService: LotService,\n    private immeubleService:ImmeubleService,\n    private coproprio) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p['id']),\n        switchMap(id => {\n          if (id === 'new') { return of(new Lot()); }\n          return this.lotService.findById(id);\n        })\n      )\n      .subscribe({\n        next: lot => {\n          this.lot = lot;\n          this.feedback = {};\n        },\n        error: err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      });\n  }\n\n  save() {\n    this.lotService.save(this.lot).subscribe({\n      next: lot => {\n        this.lot = lot;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(async () => {\n          await this.router.navigate(['/lots']);\n        }, 1000);\n      },\n      error: err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    });\n  }\n\n  async cancel() {\n    await this.router.navigate(['/lots']);\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAC/C,SAASC,EAAE,QAAQ,MAAM;AAQlB,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU3BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,UAAsB,EACtBC,eAA+B,EAC/BC,SAAS;IAJT,KAAAJ,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,SAAS,GAATA,SAAS;IAXnB,KAAAC,QAAQ,GAAQ,EAAE;IAClB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,eAAe,GAAQ,EAAE;EAUzB;EAEAC,QAAQA,CAAA;IACN,IAAI,CACDR,KAAK,CACLS,MAAM,CACNC,IAAI,CACHf,GAAG,CAACgB,CAAC,IAAIA,CAAC,CAAC,IAAI,CAAC,CAAC,EACjBf,SAAS,CAACgB,EAAE,IAAG;MACb,IAAIA,EAAE,KAAK,KAAK,EAAE;QAAE,OAAOf,EAAE,CAAC,IAAIH,GAAG,EAAE,CAAC;;MACxC,OAAO,IAAI,CAACQ,UAAU,CAACW,QAAQ,CAACD,EAAE,CAAC;IACrC,CAAC,CAAC,CACH,CACAE,SAAS,CAAC;MACTC,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACA,GAAG,GAAGA,GAAG;QACd,IAAI,CAACX,QAAQ,GAAG,EAAE;MACpB,CAAC;MACDY,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACb,QAAQ,GAAG;UAACc,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAe,CAAC;MAC7D;KACD,CAAC;EACN;EAEAC,IAAIA,CAAA;IAAA,IAAAC,KAAA;IACF,IAAI,CAACpB,UAAU,CAACmB,IAAI,CAAC,IAAI,CAACL,GAAG,CAAC,CAACF,SAAS,CAAC;MACvCC,IAAI,EAAEC,GAAG,IAAG;QACV,IAAI,CAACA,GAAG,GAAGA,GAAG;QACd,IAAI,CAACX,QAAQ,GAAG;UAACc,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAsB,CAAC;QAClEG,UAAU,eAAAC,iBAAA,CAAC,aAAW;UACpB,MAAMF,KAAI,CAACrB,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC,GAAE,IAAI,CAAC;MACV,CAAC;MACDR,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACb,QAAQ,GAAG;UAACc,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAc,CAAC;MAC5D;KACD,CAAC;EACJ;EAEMM,MAAMA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MACV,MAAMG,MAAI,CAAC1B,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAC;EACxC;CACD;AA1DY3B,gBAAgB,GAAA8B,UAAA,EAJ5BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE;CACd,CAAC,C,EACWhC,gBAAgB,CA0D5B;SA1DYA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}