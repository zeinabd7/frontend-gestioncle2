{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst headers = new HttpHeaders().set('Accept', 'application/json');\nexport class RemiseService {\n  constructor(http) {\n    this.http = http;\n    this.remiseList = [];\n    this.api = 'localhost:4500/remises';\n  }\n  findById(id) {\n    const url = `${this.api}/${id}`;\n    const params = {\n      id: id\n    };\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  getList() {\n    return this.http.get(api, {\n      pa\n    });\n  }\n  load(filter) {\n    this.find(filter).subscribe({\n      next: result => {\n        this.remiseList = result;\n      },\n      error: err => {\n        console.error('error loading', err);\n      }\n    });\n  }\n  find(filter) {\n    const params = {\n      'id_lot': filter.id_lot\n    };\n    return this.http.get(this.api, {\n      params,\n      headers\n    });\n  }\n  save(entity) {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put(url, entity, {\n        headers,\n        params\n      });\n    } else {\n      url = `${this.api}`;\n      return this.http.post(url, entity, {\n        headers,\n        params\n      });\n    }\n  }\n  delete(entity) {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete(url, {\n        headers,\n        params\n      });\n    }\n    return EMPTY;\n  }\n  static #_ = this.ɵfac = function RemiseService_Factory(t) {\n    return new (t || RemiseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RemiseService,\n    factory: RemiseService.ɵfac\n  });\n}","map":{"version":3,"names":["EMPTY","HttpHeaders","HttpParams","headers","set","RemiseService","constructor","http","remiseList","api","findById","id","url","params","get","getList","pa","load","filter","find","subscribe","next","result","error","err","console","id_lot","save","entity","toString","put","post","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\zeina\\angular-crud\\demo\\src\\app\\remise\\remise.service.ts"],"sourcesContent":["import { Remise } from './remise';\nimport { RemiseFilter } from './remise-filter';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class RemiseService {\n  remiseList: Remise[] = [];\n  api = 'localhost:4500/remises';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Remise> {\n    const url = `${this.api}/${id}`;\n    const params = { id: id };\n    return this.http.get<Remise>(url, {params, headers});\n  }\n\n  getList(): Observable<any> {\n    return this.http.get<Remise[]>(api,{pa});\n  }\n\n  load(filter: RemiseFilter): void {\n    this.find(filter).subscribe({\n      next: result => {\n        this.remiseList = result;\n      },\n      error: err => {\n        console.error('error loading', err);\n      }\n    });\n  }\n\n  find(filter: RemiseFilter): Observable<Remise[]> {\n    const params = {\n      'id_lot': filter.id_lot,\n    };\n\n    return this.http.get<Remise[]>(this.api, {params, headers});\n  }\n\n  save(entity: Remise): Observable<Remise> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Remise>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Remise>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Remise): Observable<Remise> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Remise>(url, {headers, params});\n    }\n    return EMPTY;\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}